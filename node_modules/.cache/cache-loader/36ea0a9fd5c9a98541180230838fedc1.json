{"remainingRequest":"/home/peter/cfia/docusaurus/website/node_modules/babel-loader/lib/index.js??ref--11-1!/home/peter/cfia/docusaurus/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/peter/cfia/docusaurus/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/peter/cfia/docusaurus/website/docs/import/doc3.md","dependencies":[{"path":"/home/peter/cfia/docusaurus/website/docs/import/doc3.md","mtime":1596516525819},{"path":"/home/peter/cfia/docusaurus/website/.docusaurus/docusaurus-plugin-content-docs/site-docs-import-doc-3-md-d40.json","mtime":1597268358020},{"path":"/home/peter/cfia/docusaurus/website/node_modules/cache-loader/dist/cjs.js","mtime":1596516532907},{"path":"/home/peter/cfia/docusaurus/website/node_modules/babel-loader/lib/index.js","mtime":1596516532967},{"path":"/home/peter/cfia/docusaurus/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1596516545655},{"path":"/home/peter/cfia/docusaurus/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1596516545891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}